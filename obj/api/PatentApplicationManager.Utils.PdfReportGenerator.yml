### YamlMime:ManagedReference
items:
- uid: PatentApplicationManager.Utils.PdfReportGenerator
  commentId: T:PatentApplicationManager.Utils.PdfReportGenerator
  id: PdfReportGenerator
  parent: PatentApplicationManager.Utils
  children:
  - PatentApplicationManager.Utils.PdfReportGenerator.GenerateReport(System.Collections.Generic.List{PatentApplicationManager.Entities.PatentApplication},System.String)
  langs:
  - csharp
  - vb
  name: PdfReportGenerator
  nameWithType: PdfReportGenerator
  fullName: PatentApplicationManager.Utils.PdfReportGenerator
  type: Class
  source:
    remote:
      path: Utils/PdfReportGenerator.cs
      branch: main
      repo: https://github.com/Horty-twice/PatentApplicationManager.git
    id: PdfReportGenerator
    path: Utils/PdfReportGenerator.cs
    startLine: 15
  assemblies:
  - PatentApplicationManager
  namespace: PatentApplicationManager.Utils
  summary: "\nГенератор PDF-отчетов для патентных заявок\n"
  remarks: "\nПредоставляет статический метод для создания PDF-документов с таблицей заявок.\nИспользует библиотеку PDFsharp для работы с PDF.\n"
  example: []
  syntax:
    content: public static class PdfReportGenerator
    content.vb: Public Module PdfReportGenerator
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - static
  - class
  modifiers.vb:
  - Public
  - Module
- uid: PatentApplicationManager.Utils.PdfReportGenerator.GenerateReport(System.Collections.Generic.List{PatentApplicationManager.Entities.PatentApplication},System.String)
  commentId: M:PatentApplicationManager.Utils.PdfReportGenerator.GenerateReport(System.Collections.Generic.List{PatentApplicationManager.Entities.PatentApplication},System.String)
  id: GenerateReport(System.Collections.Generic.List{PatentApplicationManager.Entities.PatentApplication},System.String)
  parent: PatentApplicationManager.Utils.PdfReportGenerator
  langs:
  - csharp
  - vb
  name: GenerateReport(List<PatentApplication>, String)
  nameWithType: PdfReportGenerator.GenerateReport(List<PatentApplication>, String)
  fullName: PatentApplicationManager.Utils.PdfReportGenerator.GenerateReport(System.Collections.Generic.List<PatentApplicationManager.Entities.PatentApplication>, System.String)
  type: Method
  source:
    remote:
      path: Utils/PdfReportGenerator.cs
      branch: main
      repo: https://github.com/Horty-twice/PatentApplicationManager.git
    id: GenerateReport
    path: Utils/PdfReportGenerator.cs
    startLine: 30
  assemblies:
  - PatentApplicationManager
  namespace: PatentApplicationManager.Utils
  summary: "\nГенерирует PDF-отчет с перечнем патентных заявок\n"
  example:
  - "\n<pre><code>var applications = repository.GetAllPatentApplications();\nPdfReportGenerator.GenerateReport(applications, &quot;C:\\\\Reports\\\\patents.pdf&quot;);</code></pre>\n"
  syntax:
    content: >-
      [Obsolete]

      public static void GenerateReport(List<PatentApplication> applications, string filePath)
    parameters:
    - id: applications
      type: System.Collections.Generic.List{PatentApplicationManager.Entities.PatentApplication}
      description: Список патентных заявок для отображения в отчете
    - id: filePath
      type: System.String
      description: Полный путь для сохранения PDF-файла
    content.vb: >-
      <Obsolete>

      Public Shared Sub GenerateReport(applications As List(Of PatentApplication), filePath As String)
  overload: PatentApplicationManager.Utils.PdfReportGenerator.GenerateReport*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: Возникает если applications или filePath равны null
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: Возникает при проблемах записи файла
  attributes:
  - type: System.ObsoleteAttribute
    ctor: System.ObsoleteAttribute.#ctor
    arguments: []
  nameWithType.vb: PdfReportGenerator.GenerateReport(List(Of PatentApplication), String)
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: PatentApplicationManager.Utils.PdfReportGenerator.GenerateReport(System.Collections.Generic.List(Of PatentApplicationManager.Entities.PatentApplication), System.String)
  name.vb: GenerateReport(List(Of PatentApplication), String)
references:
- uid: PatentApplicationManager.Utils
  commentId: N:PatentApplicationManager.Utils
  name: PatentApplicationManager.Utils
  nameWithType: PatentApplicationManager.Utils
  fullName: PatentApplicationManager.Utils
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: System.ArgumentNullException
  commentId: T:System.ArgumentNullException
  isExternal: true
- uid: System.IO.IOException
  commentId: T:System.IO.IOException
  isExternal: true
- uid: PatentApplicationManager.Utils.PdfReportGenerator.GenerateReport*
  commentId: Overload:PatentApplicationManager.Utils.PdfReportGenerator.GenerateReport
  name: GenerateReport
  nameWithType: PdfReportGenerator.GenerateReport
  fullName: PatentApplicationManager.Utils.PdfReportGenerator.GenerateReport
- uid: System.Collections.Generic.List{PatentApplicationManager.Entities.PatentApplication}
  commentId: T:System.Collections.Generic.List{PatentApplicationManager.Entities.PatentApplication}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.List`1
  name: List<PatentApplication>
  nameWithType: List<PatentApplication>
  fullName: System.Collections.Generic.List<PatentApplicationManager.Entities.PatentApplication>
  nameWithType.vb: List(Of PatentApplication)
  fullName.vb: System.Collections.Generic.List(Of PatentApplicationManager.Entities.PatentApplication)
  name.vb: List(Of PatentApplication)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: PatentApplicationManager.Entities.PatentApplication
    name: PatentApplication
    nameWithType: PatentApplication
    fullName: PatentApplicationManager.Entities.PatentApplication
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: PatentApplicationManager.Entities.PatentApplication
    name: PatentApplication
    nameWithType: PatentApplication
    fullName: PatentApplicationManager.Entities.PatentApplication
  - name: )
    nameWithType: )
    fullName: )
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Collections.Generic.List`1
  commentId: T:System.Collections.Generic.List`1
  isExternal: true
  name: List<T>
  nameWithType: List<T>
  fullName: System.Collections.Generic.List<T>
  nameWithType.vb: List(Of T)
  fullName.vb: System.Collections.Generic.List(Of T)
  name.vb: List(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: true
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
